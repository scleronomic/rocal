
# cp - full                                        dh
# t_com_mean
#                 0         j         f                  0         j         c         f
#          0   20.0      13.9      10.4            0   20.0      13.9      10.8      10.6
#          j   17.8      11.1       6.9            j   17.8      11.1       8.0       7.2
#          c   11.8       4.9       3.4            c   11.8       4.9       4.0       3.7
#          f   10.4       4.7       3.4            f   10.4       4.7       3.9       3.6
# t_com_med
#                 0         j         f                   0         j         c         f
#          0   18.6      13.3       9.6            0   18.6      13.3      10.2       9.9
#          j   16.7      10.7       6.6            j   16.7      10.7       7.7       6.9
#          c   11.0       4.7       3.1            c   11.0       4.7       3.7       3.4
#          f    9.6       4.5       3.1            f    9.6       4.5       3.6       3.2
# t_com_max
#                 0         j         f                   0         j         c         f
#          0   60.0      41.4      38.3            0   60.0      41.4      34.4      38.5
#          j   45.3      28.2      18.5            j   45.3      28.3      21.8      19.6
#          c   38.8      13.5      11.5            c   38.8      13.4      11.8      11.6
#          f   36.4      12.9      11.1            f   36.4      12.9      12.2      11.6
# t_meas_mean
#                 0         j         f                   0         j         c         f
#          0   16.3      13.0       9.5            0   16.3      13.0      10.3       9.7
#          j   13.7      10.4       6.0            j   13.7      10.4       7.1       6.3
#          c    8.1       4.0       2.5            c    8.1       4.1       3.1       2.7
#          f    7.6       3.9       2.5            f    7.6       3.9       3.0       2.6
# t_meas_med
#                 0         j         f                   0         j         c         f
#          0   15.0      12.3       9.1            0   15.0      12.3       9.9       9.2
#          j   12.7       9.7       5.8            j   12.7       9.7       6.8       6.1
#          c    7.1       3.7       2.3            c    7.1       3.8       2.9       2.4
#          f    6.6       3.7       2.3            f    6.6       3.7       2.8       2.4
# t_meas_max
#                 0         j         f                   0         j         c         f
#          0   47.9      38.6      35.5            0   47.9      38.6      34.2      35.5
#          j   35.1      27.8      17.5            j   35.1      27.8      20.5      18.8
#          c   30.7      13.7      11.8            c   30.7      13.9      12.4      12.3
#          f   30.5      13.0      11.5            f   30.5      13.4      11.9      11.8

# median
# commanded, cp dh  :   joint torques -> full torques 4.5 -> 3.6  # 0.9mm improvement
# commanded, cp full:   joint torques -> full torques 4.5 -> 3.1  # 1.4mm improvement
# measured, cp dh,  :   joint torques -> full torques 3.7 -> 2.8  # 0.9mm improvement
# measured, cp full :   joint torques -> full torques 3.7 -> 2.3  # 1.4mm improvement

# commanded:
#  /      +j_dh     +f_dh     +j_trq    +f_trq
# 21.1   ->   18   ->   10   ->    5   ->    3   # mm  (median)
# 9.7   ->   7.8   ->   5.7   ->   2.3   ->   1.7   # mm  (std)
# 60   ->   45   ->   36   ->   12   ->   10   # mm  (max)
#
# measured:
#  /      +j_dh     +f_dh     +j_trq    +f_trq
# 15   ->   13   ->   7   ->    4   ->     2   # mm  (median)
# 48   ->   35   ->   30   ->   13   ->   10   # mm  (max)


# root search
# [[ 4.8  0.3  0.   0.   0.   0. ]
#  [ 3.6  0.2  0.1  0.   0.   0. ]
#  [ 3.9  0.2  0.   0.   0.   0. ]
#  [ 0.3  0.   0.   0.   0.   0. ]
#  [19.4  1.5  0.4  0.   0.   0. ]] mm


meas = np.array([[0.00000000e+00, 0.00000000e+00, -7.45867314e-09],
                 [0.00000000e+00, 0.00000000e+00, -7.45867314e-09],
                 [0.00000000e+00, 0.00000000e+00, 6.14749559e-03],
                 [0.00000000e+00, 0.00000000e+00, 3.36309446e-04],
                 [0.00000000e+00, 0.00000000e+00, 2.01946746e-02],
                 [0.00000000e+00, 0.00000000e+00, -4.11594656e-02],
                 [0.00000000e+00, 0.00000000e+00, 4.28073224e-02],
                 [0.00000000e+00, 0.00000000e+00, 4.81011911e-03],  # x
                 [0.00000000e+00, 0.00000000e+00, -4.05462957e-03],
                 [0.00000000e+00, 0.00000000e+00, 1.06851413e-03],
                 [0.00000000e+00, 0.00000000e+00, -1.35293612e-01],
                 [0.00000000e+00, 0.00000000e+00, 2.30651663e-01],
                 [0.00000000e+00, 0.00000000e+00, 7.59454962e-02],
                 [0.00000000e+00, 0.00000000e+00, -7.45867314e-09],
                 [0.00000000e+00, 0.00000000e+00, 1.47566993e-02],
                 [0.00000000e+00, 0.00000000e+00, -1.21002076e-02],
                 [0.00000000e+00, 0.00000000e+00, 2.56451797e-03],
                 [0.00000000e+00, 0.00000000e+00, -1.50200151e-02],
                 [0.00000000e+00, 0.00000000e+00, -8.79180783e-03],
                 [0.00000000e+00, 0.00000000e+00, 3.72597179e-01],
                 [0.00000000e+00, 0.00000000e+00, 2.47092535e-01],
                 [0.00000000e+00, 0.00000000e+00, 6.55151130e-02],
                 [0.00000000e+00, 0.00000000e+00, -7.45867314e-09]])

comanded = np.array([[0.00000000e+00, 0.00000000e+00, 1.42116697e-08],
                     [0.00000000e+00, 0.00000000e+00, 1.42116697e-08],
                     [0.00000000e+00, 0.00000000e+00, 1.10928746e-02],
                     [0.00000000e+00, 0.00000000e+00, -3.57535955e-04],
                     [0.00000000e+00, 0.00000000e+00, 1.48919443e-02],
                     [0.00000000e+00, 0.00000000e+00, -7.98572532e-02],
                     [0.00000000e+00, 0.00000000e+00, 1.00906989e-01],
                     [0.00000000e+00, 0.00000000e+00, 3.47871433e-02], # x
                     [0.00000000e+00, 0.00000000e+00, 2.04554037e-02],
                     [0.00000000e+00, 0.00000000e+00, 2.19352308e-02],
                     [0.00000000e+00, 0.00000000e+00, 2.22755604e-02],
                     [0.00000000e+00, 0.00000000e+00, 2.45855420e-01],
                     [0.00000000e+00, 0.00000000e+00, -1.88491618e-01],
                     [0.00000000e+00, 0.00000000e+00, 1.42116697e-08],
                     [0.00000000e+00, 0.00000000e+00, 2.13111197e-02],
                     [0.00000000e+00, 0.00000000e+00, -2.06923321e-04],
                     [0.00000000e+00, 0.00000000e+00, 3.39562116e-02],
                     [0.00000000e+00, 0.00000000e+00, 1.34005486e-02],
                     [0.00000000e+00, 0.00000000e+00, 1.47541170e-02],
                     [0.00000000e+00, 0.00000000e+00, 3.42012167e-01],
                     [0.00000000e+00, 0.00000000e+00, 3.58341257e-01],
                     [0.00000000e+00, 0.00000000e+00, -2.95837478e-02],
                     [0.00000000e+00, 0.00000000e+00, 1.42116697e-08]])
d_cp = np.abs(cp2 / meas)[np.abs(cp2) > 1e-4]
print(np.median(d_cp.mean()), d_cp.max())
np.argmax(d_cp)
# factor 3 - 20





# only rot z and rot x
# measured f_trq
# Frame__0
#                       mean       std    median       min       max
# Translation [mm]    2.6601    1.3529    2.4664    0.2397    8.3271
#   Rotation [deg]   13.8198    0.1736   13.8137   13.3215   14.3658
# Frame__1
#                       mean       std    median       min       max
# Translation [mm]    2.6593    1.4416    2.3969    0.2641   14.6274
#   Rotation [deg]   34.4723    0.1926   34.4656   34.0198   35.1505

# measured dh 2
# │                       mean       std    median       min       max
# │ Translation [mm]    3.1777    1.4877    2.9235    0.5064    9.5313
# │   Rotation [deg]   12.5973    0.2359   12.5773   12.0257   13.4092
# │ Frame__1
# │                       mean       std    median       min       max
# │ Translation [mm]    3.1818    1.5465    2.9863    0.4160   14.2991
# │   Rotation [deg]   34.7242    0.3258   34.7174   33.9399   35.6129



# commanded f_trq
# │ Frame__0
# │                       mean       std    median       min       max
# │ Translation [mm]    3.6388    1.8061    3.3455    0.3964    9.7356
# │   Rotation [deg]   12.8496    0.1840   12.8456   12.2968   13.5054
# │ Frame__1
# │                       mean       std    median       min       max
# │ Translation [mm]    3.4842    1.8481    3.2103    0.4168   13.1090
# │   Rotation [deg]   36.2983    0.2158   36.2905   35.7240   37.21

# dh2
#                       mean       std    median       min       max
# Translation [mm]    4.1150    1.9392    3.8037    0.1276   10.8228
#   Rotation [deg]   13.0428    0.2963   13.0262   12.3730   13.9993
# Frame__1
#                       mean       std    median       min       max
# Translation [mm]    3.9166    1.9073    3.6611    0.3772   12.7652
#   Rotation [deg]   35.0273    0.3298   35.0213   34.2261   35.9491

#dh 3
# │ Frame__0
# │                       mean       std    median       min       max
# │ Translation [mm]    3.9415    1.9040    3.6140    0.3070   10.7099
# │   Rotation [deg]    8.4692    0.3020    8.4658    7.6284    9.4121
# │ Frame__1
# │                       mean       std    median       min       max
# │ Translation [mm]    3.7715    1.8760    3.5217    0.3032   12.8033
# │   Rotation [deg]   34.8391    0.2763   34.8562   34.0932   35.7461
# │ (py37_tf2) tenh_jo@rmc-lx0062:~/PycharmProjects/aj-mopla>


# f_trq
# wrong order, makes a difference offset @ f
#                       mean       std    median       min       max
# Translation [mm]    4.9919    2.5486    4.5710    0.5266   19.7150
#   Rotation [deg]   15.6664    0.3227   15.6524   14.7605   16.8451
# Frame__1
#                       mean       std    median       min       max
# Translation [mm]    4.5205    2.3197    4.0770    0.2599   15.2038
#   Rotation [deg]   34.3990    0.3447   34.4262   33.2828   35.1423